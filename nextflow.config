params {
  reads = "/MIGE/01_DATA/01_FASTQ/*GYYMMDD.fastq.gz"
  kmer_size = 11
  params.mlst_database = "/sw/mlst-master/db/pubmlst"
  allele_dir = ""
  sequencing_date = "GYYMMDD"
  output_dir = "/MIGE/01_DATA/03_ASSEMBLY/"
  help = false
  version = false
}

// This actually automatically downloaded the conda environment and pubmlst directory. Wow! So, I had to comment it out.
// conda.enabled = true

trace {
  enabled = true
  file = "${params.output_dir}/pipeline_stats.txt"
  overwrite = true
  fields =  "task_id,\
  hash,\
  process,\
  tag,\
  status,\
  exit,\
  start,\
  peak_rss,\
  cpus,\
  time,\
  disk,\
  memory,\
  duration,\
  realtime,\
  queue,\
  %cpu,\
  %mem,\
  rss,\
  vmem,\
  rchar,\
  wchar"

}

timeline {
  enabled = true
  overwrite = true
  file = "$params.output_dir/execution_timeline.html"
}

report {
  enabled = true
  overwrite = true
  file = "$params.output_dir/execution_report.html"
}

dag {
  enabled = true
  file = "${params.output_dir}/pipeline_dag.png"
  overwrite = true
}

manifest {
  name = 'ayoraind/nextflow_pipelines/krocus'
  author = 'Ayorinde Afolayan'
  homePage = 'https://github.com/ayoraind'
  description = 'Pipeline for rapid MLST direct from uncorrected long reads'
  mainScript = 'main.nf'
  version = '1.0dev'
}

process {
  errorStrategy = { task.attempt <= 2 ? "retry" : "finish" }
  maxRetries = 1
}
